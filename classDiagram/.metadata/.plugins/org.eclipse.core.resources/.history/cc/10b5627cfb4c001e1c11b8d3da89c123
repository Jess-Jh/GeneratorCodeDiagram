/*
 * 
 */
package concrete.diagram.edit.parts;

/**
 * @generated
 */
public class ConcreteEditPartFactory implements org.eclipse.gef.EditPartFactory {

		/**
 * @generated
 */
	public org.eclipse.gef.EditPart createEditPart(org.eclipse.gef.EditPart context, Object model) {
		if (model instanceof org.eclipse.gmf.runtime.notation.View) {
			org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) model;
			switch (concrete.diagram.part.ConcreteVisualIDRegistry.getVisualID(view)) {
				
	case concrete.diagram.edit.parts.ClassDiagramJJDEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.ClassDiagramJJDEditPart(view);
									
	case concrete.diagram.edit.parts.PackageJJDEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.PackageJJDEditPart(view);
					
	case concrete.diagram.edit.parts.PackageJJDNameEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.PackageJJDNameEditPart(view);
									
	case concrete.diagram.edit.parts.ClassJJDEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.ClassJJDEditPart(view);
					
	case concrete.diagram.edit.parts.ClassJJDNameEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.ClassJJDNameEditPart(view);
									
	case concrete.diagram.edit.parts.PackageJJD2EditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.PackageJJD2EditPart(view);
					
	case concrete.diagram.edit.parts.PackageJJDName2EditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.PackageJJDName2EditPart(view);
									
	case concrete.diagram.edit.parts.ClassJJD2EditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.ClassJJD2EditPart(view);
					
	case concrete.diagram.edit.parts.ClassJJDName2EditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.ClassJJDName2EditPart(view);
									
	case concrete.diagram.edit.parts.AttributeJJDEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.AttributeJJDEditPart(view);
					
	case concrete.diagram.edit.parts.AttributeJJDNameEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.AttributeJJDNameEditPart(view);
									
	case concrete.diagram.edit.parts.MethodJJDEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.MethodJJDEditPart(view);
					
	case concrete.diagram.edit.parts.MethodJJDNameEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.MethodJJDNameEditPart(view);
									
	case concrete.diagram.edit.parts.AttributeJJD2EditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.AttributeJJD2EditPart(view);
					
	case concrete.diagram.edit.parts.AttributeJJDName2EditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.AttributeJJDName2EditPart(view);
								
	case concrete.diagram.edit.parts.PackageJJDPackageJJDSubPackagesJJDCompartmentEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.PackageJJDPackageJJDSubPackagesJJDCompartmentEditPart(view);

	case concrete.diagram.edit.parts.PackageJJDPackageJJDListClassJJDCompartmentEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.PackageJJDPackageJJDListClassJJDCompartmentEditPart(view);

	case concrete.diagram.edit.parts.PackageJJDPackageJJDSubPackagesJJDCompartment2EditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.PackageJJDPackageJJDSubPackagesJJDCompartment2EditPart(view);

	case concrete.diagram.edit.parts.PackageJJDPackageJJDListClassJJDCompartment2EditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.PackageJJDPackageJJDListClassJJDCompartment2EditPart(view);

	case concrete.diagram.edit.parts.ClassJJDClassJJDListAttributesJJDCompartmentEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.ClassJJDClassJJDListAttributesJJDCompartmentEditPart(view);

	case concrete.diagram.edit.parts.ClassJJDClassJJDListMethodsJJDCompartmentEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.ClassJJDClassJJDListMethodsJJDCompartmentEditPart(view);

	case concrete.diagram.edit.parts.MethodJJDMethodJJDListAttributesJJDCompartmentEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.MethodJJDMethodJJDListAttributesJJDCompartmentEditPart(view);

	case concrete.diagram.edit.parts.ClassJJDClassJJDListAttributesJJDCompartment2EditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.ClassJJDClassJJDListAttributesJJDCompartment2EditPart(view);

	case concrete.diagram.edit.parts.ClassJJDClassJJDListMethodsJJDCompartment2EditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.ClassJJDClassJJDListMethodsJJDCompartment2EditPart(view);
									
	case concrete.diagram.edit.parts.AgregationJJDEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.AgregationJJDEditPart(view);
					
									
	case concrete.diagram.edit.parts.InheritanceJJDEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.InheritanceJJDEditPart(view);
					
									
	case concrete.diagram.edit.parts.ContainmentJJDEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.ContainmentJJDEditPart(view);
					
	case concrete.diagram.edit.parts.ContainmentJJDRolBEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.ContainmentJJDRolBEditPart(view);

									
	case concrete.diagram.edit.parts.AssociationJJDEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.AssociationJJDEditPart(view);
					
									
	case concrete.diagram.edit.parts.ImplementJJDEditPart.VISUAL_ID:
		return new concrete.diagram.edit.parts.ImplementJJDEditPart(view);
					
							}
		}
		return createUnrecognizedEditPart(context, model);
	}
	
		/**
 * @generated
 */
	 private org.eclipse.gef.EditPart createUnrecognizedEditPart(org.eclipse.gef.EditPart context, Object model) {
	 	// Handle creation of unrecognized child node EditParts here
	 	return null;
	 }
	
		/**
 * @generated
 */
	public static org.eclipse.gef.tools.CellEditorLocator getTextCellEditorLocator(
			org.eclipse.gmf.runtime.diagram.ui.editparts.ITextAwareEditPart source) {
		return org.eclipse.gmf.tooling.runtime.directedit.locator.CellEditorLocatorAccess.INSTANCE.getTextCellEditorLocator(source);
	}
	
	}
