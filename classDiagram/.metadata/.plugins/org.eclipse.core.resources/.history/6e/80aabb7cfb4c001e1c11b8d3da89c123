	/*
 * 
 */
package concrete.diagram.navigator;

/**
 * @generated
 */
public class ConcreteNavigatorLabelProvider extends org.eclipse.jface.viewers.LabelProvider implements org.eclipse.ui.navigator.ICommonLabelProvider, org.eclipse.jface.viewers.ITreePathLabelProvider {

		/**
 * @generated
 */
static {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().getImageRegistry().put("Navigator?UnknownElement", org.eclipse.jface.resource.ImageDescriptor.getMissingImageDescriptor());  //$NON-NLS-1$
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().getImageRegistry().put("Navigator?ImageNotFound", org.eclipse.jface.resource.ImageDescriptor.getMissingImageDescriptor());  //$NON-NLS-1$
}
	
		/**
 * @generated
 */
public void updateLabel(org.eclipse.jface.viewers.ViewerLabel label, org.eclipse.jface.viewers.TreePath elementPath) {
	Object element = elementPath.getLastSegment();
	if (element instanceof concrete.diagram.navigator.ConcreteNavigatorItem && !isOwnView(((concrete.diagram.navigator.ConcreteNavigatorItem) element).getView())) {
		return;
	}
	label.setText(getText(element));
	label.setImage(getImage(element));
}
	
		/**
 * @generated
 */
public org.eclipse.swt.graphics.Image getImage(Object element) {
	if (element instanceof concrete.diagram.navigator.ConcreteNavigatorGroup) {
	concrete.diagram.navigator.ConcreteNavigatorGroup group = (concrete.diagram.navigator.ConcreteNavigatorGroup) element;
	return concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().getBundledImage(group.getIcon());
}

	if (element instanceof concrete.diagram.navigator.ConcreteNavigatorItem) {
	concrete.diagram.navigator.ConcreteNavigatorItem navigatorItem = (concrete.diagram.navigator.ConcreteNavigatorItem) element;
	if (!isOwnView(navigatorItem.getView())) {
		return super.getImage(element);
	}
	return getImage(navigatorItem.getView());
}

	// Due to plugin.xml content will be called only for "own" views
if (element instanceof org.eclipse.core.runtime.IAdaptable) {
	org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) ((org.eclipse.core.runtime.IAdaptable) element).getAdapter(org.eclipse.gmf.runtime.notation.View.class);
	if (view != null && isOwnView(view)) {
		return getImage(view);
	}
}

		return super.getImage(element);
}
	
		/**
 * @generated
 */
public org.eclipse.swt.graphics.Image getImage(org.eclipse.gmf.runtime.notation.View view) {
		switch (concrete.diagram.part.ConcreteVisualIDRegistry.getVisualID(view)) {
		case concrete.diagram.edit.parts.ClassDiagramJJDEditPart.VISUAL_ID:
	return getImage("Navigator?Diagram?concrete?ClassDiagramJJD", concrete.diagram.providers.ConcreteElementTypes.ClassDiagramJJD_1000); //$NON-NLS-1$
case concrete.diagram.edit.parts.PackageJJDEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?concrete?PackageJJD", concrete.diagram.providers.ConcreteElementTypes.PackageJJD_2001); //$NON-NLS-1$
case concrete.diagram.edit.parts.ClassJJDEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?concrete?ClassJJD", concrete.diagram.providers.ConcreteElementTypes.ClassJJD_2002); //$NON-NLS-1$
case concrete.diagram.edit.parts.PackageJJD2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?concrete?PackageJJD", concrete.diagram.providers.ConcreteElementTypes.PackageJJD_3001); //$NON-NLS-1$
case concrete.diagram.edit.parts.ClassJJD2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?concrete?ClassJJD", concrete.diagram.providers.ConcreteElementTypes.ClassJJD_3002); //$NON-NLS-1$
case concrete.diagram.edit.parts.AttributeJJDEditPart.VISUAL_ID:
	return getImage("Navigator?Node?concrete?AttributeJJD", concrete.diagram.providers.ConcreteElementTypes.AttributeJJD_3003); //$NON-NLS-1$
case concrete.diagram.edit.parts.MethodJJDEditPart.VISUAL_ID:
	return getImage("Navigator?Node?concrete?MethodJJD", concrete.diagram.providers.ConcreteElementTypes.MethodJJD_3004); //$NON-NLS-1$
case concrete.diagram.edit.parts.AttributeJJD2EditPart.VISUAL_ID:
	return getImage("Navigator?Node?concrete?AttributeJJD", concrete.diagram.providers.ConcreteElementTypes.AttributeJJD_3005); //$NON-NLS-1$
case concrete.diagram.edit.parts.AgregationJJDEditPart.VISUAL_ID:
	return getImage("Navigator?Link?concrete?AgregationJJD", concrete.diagram.providers.ConcreteElementTypes.AgregationJJD_4001); //$NON-NLS-1$
case concrete.diagram.edit.parts.InheritanceJJDEditPart.VISUAL_ID:
	return getImage("Navigator?Link?concrete?InheritanceJJD", concrete.diagram.providers.ConcreteElementTypes.InheritanceJJD_4002); //$NON-NLS-1$
case concrete.diagram.edit.parts.ContainmentJJDEditPart.VISUAL_ID:
	return getImage("Navigator?Link?concrete?ContainmentJJD", concrete.diagram.providers.ConcreteElementTypes.ContainmentJJD_4003); //$NON-NLS-1$
case concrete.diagram.edit.parts.AssociationJJDEditPart.VISUAL_ID:
	return getImage("Navigator?Link?concrete?AssociationJJD", concrete.diagram.providers.ConcreteElementTypes.AssociationJJD_4004); //$NON-NLS-1$
case concrete.diagram.edit.parts.ImplementJJDEditPart.VISUAL_ID:
	return getImage("Navigator?Link?concrete?ImplementJJD", concrete.diagram.providers.ConcreteElementTypes.ImplementJJD_4005); //$NON-NLS-1$
	}
		return getImage("Navigator?UnknownElement", null);  //$NON-NLS-1$
}
	
		/**
 * @generated
 */
private org.eclipse.swt.graphics.Image getImage(String key, org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
	org.eclipse.jface.resource.ImageRegistry imageRegistry = concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().getImageRegistry();
	org.eclipse.swt.graphics.Image image = imageRegistry.get(key);
	if (image == null && elementType != null && concrete.diagram.providers.ConcreteElementTypes.isKnownElementType(elementType)) {
		image = concrete.diagram.providers.ConcreteElementTypes.getImage(elementType);
		imageRegistry.put(key, image);
	}
			
	if (image == null) {
		image = imageRegistry.get("Navigator?ImageNotFound");  //$NON-NLS-1$
		imageRegistry.put(key, image);
	}
	return image;
}
	
		/**
 * @generated
 */
public String getText(Object element) {
	if (element instanceof concrete.diagram.navigator.ConcreteNavigatorGroup) {
	concrete.diagram.navigator.ConcreteNavigatorGroup group = (concrete.diagram.navigator.ConcreteNavigatorGroup) element;
	return group.getGroupName();
}

	if (element instanceof concrete.diagram.navigator.ConcreteNavigatorItem) {
	concrete.diagram.navigator.ConcreteNavigatorItem navigatorItem = (concrete.diagram.navigator.ConcreteNavigatorItem) element;
   		if (!isOwnView(navigatorItem.getView())) {
   			return null;
   		}
   		return getText(navigatorItem.getView());
	}

	// Due to plugin.xml content will be called only for "own" views
if (element instanceof org.eclipse.core.runtime.IAdaptable) {
	org.eclipse.gmf.runtime.notation.View view = (org.eclipse.gmf.runtime.notation.View) ((org.eclipse.core.runtime.IAdaptable) element).getAdapter(org.eclipse.gmf.runtime.notation.View.class);
	if (view != null && isOwnView(view)) {
		return getText(view);
	}
}

		return super.getText(element);
}
	
		/**
 * @generated
 */
public String getText(org.eclipse.gmf.runtime.notation.View view) {
	if (view.getElement() != null && view.getElement().eIsProxy()) {
		return getUnresolvedDomainElementProxyText(view);
	}
		switch (concrete.diagram.part.ConcreteVisualIDRegistry.getVisualID(view)) {
		case concrete.diagram.edit.parts.ClassDiagramJJDEditPart.VISUAL_ID:
	return getClassDiagramJJD_1000Text(view);
case concrete.diagram.edit.parts.PackageJJDEditPart.VISUAL_ID:
	return getPackageJJD_2001Text(view);
case concrete.diagram.edit.parts.ClassJJDEditPart.VISUAL_ID:
	return getClassJJD_2002Text(view);
case concrete.diagram.edit.parts.PackageJJD2EditPart.VISUAL_ID:
	return getPackageJJD_3001Text(view);
case concrete.diagram.edit.parts.ClassJJD2EditPart.VISUAL_ID:
	return getClassJJD_3002Text(view);
case concrete.diagram.edit.parts.AttributeJJDEditPart.VISUAL_ID:
	return getAttributeJJD_3003Text(view);
case concrete.diagram.edit.parts.MethodJJDEditPart.VISUAL_ID:
	return getMethodJJD_3004Text(view);
case concrete.diagram.edit.parts.AttributeJJD2EditPart.VISUAL_ID:
	return getAttributeJJD_3005Text(view);
case concrete.diagram.edit.parts.AgregationJJDEditPart.VISUAL_ID:
	return getAgregationJJD_4001Text(view);
case concrete.diagram.edit.parts.InheritanceJJDEditPart.VISUAL_ID:
	return getInheritanceJJD_4002Text(view);
case concrete.diagram.edit.parts.ContainmentJJDEditPart.VISUAL_ID:
	return getContainmentJJD_4003Text(view);
case concrete.diagram.edit.parts.AssociationJJDEditPart.VISUAL_ID:
	return getAssociationJJD_4004Text(view);
case concrete.diagram.edit.parts.ImplementJJDEditPart.VISUAL_ID:
	return getImplementJJD_4005Text(view);
	}
		return getUnknownElementText(view);
}
	
		/**
 * @generated
 */
private String getClassDiagramJJD_1000Text(org.eclipse.gmf.runtime.notation.View view) {
			concrete.ClassDiagramJJD domainModelElement = (concrete.ClassDiagramJJD) view.getElement();
if (domainModelElement != null) {
	return domainModelElement.getName();
} else {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().logError("No domain element for view with visualID = " + 1000);  //$NON-NLS-1$
		return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getPackageJJD_2001Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = concrete.diagram.providers.ConcreteParserProvider.getParser(concrete.diagram.providers.ConcreteElementTypes.PackageJJD_2001, view.getElement() != null ? view.getElement() : view, concrete.diagram.part.ConcreteVisualIDRegistry.getType(concrete.diagram.edit.parts.PackageJJDNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5006); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getClassJJD_2002Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = concrete.diagram.providers.ConcreteParserProvider.getParser(concrete.diagram.providers.ConcreteElementTypes.ClassJJD_2002, view.getElement() != null ? view.getElement() : view, concrete.diagram.part.ConcreteVisualIDRegistry.getType(concrete.diagram.edit.parts.ClassJJDNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5007); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getPackageJJD_3001Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = concrete.diagram.providers.ConcreteParserProvider.getParser(concrete.diagram.providers.ConcreteElementTypes.PackageJJD_3001, view.getElement() != null ? view.getElement() : view, concrete.diagram.part.ConcreteVisualIDRegistry.getType(concrete.diagram.edit.parts.PackageJJDName2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5005); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getClassJJD_3002Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = concrete.diagram.providers.ConcreteParserProvider.getParser(concrete.diagram.providers.ConcreteElementTypes.ClassJJD_3002, view.getElement() != null ? view.getElement() : view, concrete.diagram.part.ConcreteVisualIDRegistry.getType(concrete.diagram.edit.parts.ClassJJDName2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5004); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getAttributeJJD_3003Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = concrete.diagram.providers.ConcreteParserProvider.getParser(concrete.diagram.providers.ConcreteElementTypes.AttributeJJD_3003, view.getElement() != null ? view.getElement() : view, concrete.diagram.part.ConcreteVisualIDRegistry.getType(concrete.diagram.edit.parts.AttributeJJDNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5001); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getMethodJJD_3004Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = concrete.diagram.providers.ConcreteParserProvider.getParser(concrete.diagram.providers.ConcreteElementTypes.MethodJJD_3004, view.getElement() != null ? view.getElement() : view, concrete.diagram.part.ConcreteVisualIDRegistry.getType(concrete.diagram.edit.parts.MethodJJDNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5003); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getAttributeJJD_3005Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = concrete.diagram.providers.ConcreteParserProvider.getParser(concrete.diagram.providers.ConcreteElementTypes.AttributeJJD_3005, view.getElement() != null ? view.getElement() : view, concrete.diagram.part.ConcreteVisualIDRegistry.getType(concrete.diagram.edit.parts.AttributeJJDName2EditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5002); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getAgregationJJD_4001Text(org.eclipse.gmf.runtime.notation.View view) {
						concrete.AgregationJJD domainModelElement = (concrete.AgregationJJD) view.getElement();
if (domainModelElement != null) {
	return domainModelElement.getRolA();
} else {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().logError("No domain element for view with visualID = " + 4001);  //$NON-NLS-1$
		return "";  //$NON-NLS-1$
}
		}
	/**
 * @generated
 */
private String getInheritanceJJD_4002Text(org.eclipse.gmf.runtime.notation.View view) {
						concrete.InheritanceJJD domainModelElement = (concrete.InheritanceJJD) view.getElement();
if (domainModelElement != null) {
	return domainModelElement.getRolA();
} else {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().logError("No domain element for view with visualID = " + 4002);  //$NON-NLS-1$
		return "";  //$NON-NLS-1$
}
		}
	/**
 * @generated
 */
private String getContainmentJJD_4003Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = concrete.diagram.providers.ConcreteParserProvider.getParser(concrete.diagram.providers.ConcreteElementTypes.ContainmentJJD_4003, view.getElement() != null ? view.getElement() : view, concrete.diagram.part.ConcreteVisualIDRegistry.getType(concrete.diagram.edit.parts.ContainmentJJDRolBEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 6001); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getAssociationJJD_4004Text(org.eclipse.gmf.runtime.notation.View view) {
						concrete.AssociationJJD domainModelElement = (concrete.AssociationJJD) view.getElement();
if (domainModelElement != null) {
	return domainModelElement.getRolA();
} else {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().logError("No domain element for view with visualID = " + 4004);  //$NON-NLS-1$
		return "";  //$NON-NLS-1$
}
		}
	/**
 * @generated
 */
private String getImplementJJD_4005Text(org.eclipse.gmf.runtime.notation.View view) {
						concrete.ImplementJJD domainModelElement = (concrete.ImplementJJD) view.getElement();
if (domainModelElement != null) {
	return domainModelElement.getRolA();
} else {
	concrete.diagram.part.ConcreteDiagramEditorPlugin.getInstance().logError("No domain element for view with visualID = " + 4005);  //$NON-NLS-1$
		return "";  //$NON-NLS-1$
}
		}
	
		/**
 * @generated
 */
private String getUnknownElementText(org.eclipse.gmf.runtime.notation.View view) {
	return "<UnknownElement Visual_ID = " + view.getType() + ">";  //$NON-NLS-1$  //$NON-NLS-2$
}
	
		/**
 * @generated
 */
private String getUnresolvedDomainElementProxyText(org.eclipse.gmf.runtime.notation.View view) {
	return "<Unresolved domain element Visual_ID = " + view.getType() + ">";  //$NON-NLS-1$  //$NON-NLS-2$
}
	
		/**
 * @generated
 */
public void init(org.eclipse.ui.navigator.ICommonContentExtensionSite aConfig) {
}

		/**
 * @generated
 */
public void restoreState(org.eclipse.ui.IMemento aMemento) {
}

		/**
 * @generated
 */
public void saveState(org.eclipse.ui.IMemento aMemento) {
}
	
		/**
 * @generated
 */
public String getDescription(Object anElement) {
	return null;
}
	
		/**
 * @generated
 */
private boolean isOwnView(org.eclipse.gmf.runtime.notation.View view) {
	return concrete.diagram.edit.parts.ClassDiagramJJDEditPart.MODEL_ID.equals(concrete.diagram.part.ConcreteVisualIDRegistry.getModelID(view));
}

	}
