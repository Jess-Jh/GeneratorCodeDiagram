[comment encoding = UTF-8 /]
[**
 * The documentation of the module generate.
 */]
[module generate('http://relationalmodel')]


[**
 * The documentation of the template generateElement.
 * @param aModelFactoryAbstractRelationalModel
 */]
[template public generateElement(aModelFactoryAbstractRelationalModel : ModelFactoryAbstractRelationalModel)]
[comment @main/]
	[for (schema : Schema | aModelFactoryAbstractRelationalModel.listSchemas)]
		[createSchema(schema)/];
	[/for]
[/template]

[template public createSchema(schema : Schema)]
	[file (schema.name.concat('.sql'), false, 'UTF-8')]

		CREATE DATABASE [schema.name/];
		USE [schema.name/];
		[for (table : Table | schema.listTables)]
			[createTable(table)/]
		[/for]
		[for (table : Table | schema.listTables)]
			[createRelationsTable(table)/]
		[/for]
	
	[/file]
[/template]

[template public createTable(table : Table)]
	CREATE TABLE [table.name/] (
		[for (column : Column | table.listColumns)]
			[if not column.name.contains('FOREIGN KEY')]
				[column.name/] [column.dataType/][if (column.dataType = DataType::VARCHAR)]([column.size/])[/if][if (not column.isPrimaryKey) and (not (table.listColumns->indexOf(column) = table.listColumns->size() - 1))],[/if][if (column.notNull)] NOT NULL[/if] [if (column.isAutoIncremental)] AUTO_INCREMENT[/if][if (column.isPrimaryKey)], [/if]
				[if (column.isPrimaryKey)] PRIMARY KEY ([column.name/]),[/if]
				[if (column.uniqueIndex)] UNIQUE ([column.name/]),[/if]
			[/if]
		[/for]
	);		
		
[/template]

[template public createRelationsTable(table : Table)]

[if (not table.name.contains('Person') and not table.name.contains('Aeroline'))]
	ALTER TABLE [table.name/]
	[for (column : Column | table.listColumns)]
		[if (column.name.contains('FOREIGN KEY'))]
			ADD [column.name/][if (not (column = table.listColumns->last()))],[/if][if (column = table.listColumns->last())];[/if] 
		[/if]
	[/for]
[/if]
		
[/template]


